# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import server_pb2 as server__pb2


class ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Write = channel.unary_unary(
                '/grpc.Server/Write',
                request_serializer=server__pb2.WriteRequest.SerializeToString,
                response_deserializer=server__pb2.WriteResponse.FromString,
                )
        self.PrimaryWrite = channel.unary_unary(
                '/grpc.Server/PrimaryWrite',
                request_serializer=server__pb2.WriteRequest.SerializeToString,
                response_deserializer=server__pb2.WriteResponse.FromString,
                )
        self.ReplicateWrite = channel.unary_unary(
                '/grpc.Server/ReplicateWrite',
                request_serializer=server__pb2.ReplicateWriteRequest.SerializeToString,
                response_deserializer=server__pb2.SimpleResponse.FromString,
                )
        self.Read = channel.unary_unary(
                '/grpc.Server/Read',
                request_serializer=server__pb2.ReadRequest.SerializeToString,
                response_deserializer=server__pb2.ReadResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/grpc.Server/Delete',
                request_serializer=server__pb2.DeleteRequest.SerializeToString,
                response_deserializer=server__pb2.SimpleResponse.FromString,
                )
        self.PrimaryDelete = channel.unary_unary(
                '/grpc.Server/PrimaryDelete',
                request_serializer=server__pb2.DeleteRequest.SerializeToString,
                response_deserializer=server__pb2.SimpleResponse.FromString,
                )
        self.ReplicateDelete = channel.unary_unary(
                '/grpc.Server/ReplicateDelete',
                request_serializer=server__pb2.ReplicateDeleteRequest.SerializeToString,
                response_deserializer=server__pb2.SimpleResponse.FromString,
                )
        self.AddReplicaServer = channel.unary_unary(
                '/grpc.Server/AddReplicaServer',
                request_serializer=server__pb2.AddReplicaServerRequest.SerializeToString,
                response_deserializer=server__pb2.SimpleResponse.FromString,
                )


class ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Write(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrimaryWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicateWrite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrimaryDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicateDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddReplicaServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Write': grpc.unary_unary_rpc_method_handler(
                    servicer.Write,
                    request_deserializer=server__pb2.WriteRequest.FromString,
                    response_serializer=server__pb2.WriteResponse.SerializeToString,
            ),
            'PrimaryWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.PrimaryWrite,
                    request_deserializer=server__pb2.WriteRequest.FromString,
                    response_serializer=server__pb2.WriteResponse.SerializeToString,
            ),
            'ReplicateWrite': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateWrite,
                    request_deserializer=server__pb2.ReplicateWriteRequest.FromString,
                    response_serializer=server__pb2.SimpleResponse.SerializeToString,
            ),
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=server__pb2.ReadRequest.FromString,
                    response_serializer=server__pb2.ReadResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=server__pb2.DeleteRequest.FromString,
                    response_serializer=server__pb2.SimpleResponse.SerializeToString,
            ),
            'PrimaryDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.PrimaryDelete,
                    request_deserializer=server__pb2.DeleteRequest.FromString,
                    response_serializer=server__pb2.SimpleResponse.SerializeToString,
            ),
            'ReplicateDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateDelete,
                    request_deserializer=server__pb2.ReplicateDeleteRequest.FromString,
                    response_serializer=server__pb2.SimpleResponse.SerializeToString,
            ),
            'AddReplicaServer': grpc.unary_unary_rpc_method_handler(
                    servicer.AddReplicaServer,
                    request_deserializer=server__pb2.AddReplicaServerRequest.FromString,
                    response_serializer=server__pb2.SimpleResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpc.Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Write(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/Write',
            server__pb2.WriteRequest.SerializeToString,
            server__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrimaryWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/PrimaryWrite',
            server__pb2.WriteRequest.SerializeToString,
            server__pb2.WriteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicateWrite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/ReplicateWrite',
            server__pb2.ReplicateWriteRequest.SerializeToString,
            server__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/Read',
            server__pb2.ReadRequest.SerializeToString,
            server__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/Delete',
            server__pb2.DeleteRequest.SerializeToString,
            server__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrimaryDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/PrimaryDelete',
            server__pb2.DeleteRequest.SerializeToString,
            server__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicateDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/ReplicateDelete',
            server__pb2.ReplicateDeleteRequest.SerializeToString,
            server__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddReplicaServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/grpc.Server/AddReplicaServer',
            server__pb2.AddReplicaServerRequest.SerializeToString,
            server__pb2.SimpleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
